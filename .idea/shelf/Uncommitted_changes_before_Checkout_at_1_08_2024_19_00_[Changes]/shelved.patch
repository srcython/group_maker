Index: app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yeceylan.groupmaker.ui.sport_types\r\n\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.clickable\r\nimport androidx.compose.foundation.layout.Box\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.fillMaxWidth\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.foundation.lazy.LazyColumn\r\nimport androidx.compose.foundation.lazy.items\r\nimport androidx.compose.foundation.shape.RoundedCornerShape\r\nimport androidx.compose.material3.Card\r\nimport androidx.compose.material3.CardDefaults\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.graphics.Brush\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.layout.ContentScale\r\nimport androidx.compose.ui.text.TextStyle\r\nimport androidx.compose.ui.text.font.FontStyle\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.hilt.navigation.compose.hiltViewModel\r\nimport androidx.navigation.NavController\r\nimport com.bumptech.glide.integration.compose.ExperimentalGlideComposeApi\r\nimport com.bumptech.glide.integration.compose.GlideImage\r\nimport com.yeceylan.groupmaker.core.Response\r\nimport com.yeceylan.groupmaker.ui.sport_types.navigation.SportTypeScreens\r\n\r\n@Composable\r\nfun SportTypes(navController: NavController, viewModel: SportTypeViewModel = hiltViewModel()) {\r\n\r\n    when (val sportListResponse = viewModel.booksResponse) {\r\n        is Response.Failure -> \"TODO()\"\r\n        is Response.Loading -> \"TODO()\"\r\n        is Response.Success ->\r\n\r\n            Column(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(top = 40.dp),\r\n                horizontalAlignment = Alignment.CenterHorizontally,\r\n            ) {\r\n                LazyColumn() {\r\n                    val a = sportListResponse.data\r\n\r\n                    items(sportListResponse.data) {\r\n\r\n                        ImageCard(\r\n                            painter = it.image!!,\r\n                            contentDescription = \"\",\r\n                            title = it.title!!,\r\n                            navController = navController,\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\n@OptIn(ExperimentalGlideComposeApi::class)\r\n@Composable\r\nfun ImageCard(\r\n    painter: String,\r\n    contentDescription: String,\r\n    title: String,\r\n    modifier: Modifier = Modifier,\r\n    navController: NavController\r\n) {\r\n    Card(\r\n        modifier = modifier\r\n            .fillMaxWidth()\r\n            .padding(20.dp)\r\n            .clickable {\r\n                navController.navigate(SportTypeScreens.SportTypeSetting)\r\n            },\r\n        shape = RoundedCornerShape(24.dp),\r\n        elevation = CardDefaults.cardElevation(10.dp),\r\n\r\n        ) {\r\n        Box(modifier = Modifier.height(200.dp)) {\r\n\r\n            GlideImage(\r\n                model = painter,\r\n                contentDescription = contentDescription,\r\n                modifier = Modifier.fillMaxSize(),\r\n                contentScale = ContentScale.Crop,\r\n            )\r\n\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .background(\r\n                        brush = Brush.verticalGradient(\r\n                            colors = listOf(\r\n                                Color.Transparent,\r\n                                Color.Black,\r\n                            ),\r\n                            // startY = 100f,\r\n                        ),\r\n                    ),\r\n            ) {}\r\n            Box(\r\n                modifier = Modifier\r\n                    .fillMaxSize()\r\n                    .padding(12.dp),\r\n                contentAlignment = Alignment.BottomCenter,\r\n            ) {\r\n                Text(\r\n                    title,\r\n                    style = TextStyle(\r\n                        color = Color.White,\r\n                        fontSize = 16.sp,\r\n                        fontStyle = FontStyle.Italic,\r\n                    )\r\n                )\r\n            }\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt	
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt	
@@ -46,7 +46,6 @@
                 horizontalAlignment = Alignment.CenterHorizontally,
             ) {
                 LazyColumn() {
-                    val a = sportListResponse.data
 
                     items(sportListResponse.data) {
 
