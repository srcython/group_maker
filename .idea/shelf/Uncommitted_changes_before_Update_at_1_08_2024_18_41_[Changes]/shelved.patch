Index: app/src/main/java/com/yeceylan/groupmaker/SportTypes.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/SportTypes.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt
rename from app/src/main/java/com/yeceylan/groupmaker/SportTypes.kt
rename to app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/SportTypes.kt	(revision ccad603bd1972110131c0470b7447397545e4c88)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypes.kt	(date 1722525013467)
@@ -1,6 +1,5 @@
-package com.yeceylan.groupmaker
+package com.yeceylan.groupmaker.ui.sport_types
 
-import android.util.Log
 import androidx.compose.foundation.background
 import androidx.compose.foundation.clickable
 import androidx.compose.foundation.layout.Box
@@ -16,9 +15,6 @@
 import androidx.compose.material3.CardDefaults
 import androidx.compose.material3.Text
 import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.compose.runtime.mutableStateListOf
-import androidx.compose.runtime.remember
 import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.graphics.Brush
@@ -26,76 +22,64 @@
 import androidx.compose.ui.layout.ContentScale
 import androidx.compose.ui.text.TextStyle
 import androidx.compose.ui.text.font.FontStyle
-import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
+import androidx.hilt.navigation.compose.hiltViewModel
+import androidx.navigation.NavController
 import com.bumptech.glide.integration.compose.ExperimentalGlideComposeApi
 import com.bumptech.glide.integration.compose.GlideImage
-import com.google.firebase.firestore.FirebaseFirestore
+import com.yeceylan.groupmaker.core.Response
+import com.yeceylan.groupmaker.ui.sport_types.navigation.SportTypeScreens
 
-data class SportType2(val title: String, val image: String)
-
-@Preview(showBackground = true)
 @Composable
-fun SportTypes() {
-
-    val myList = remember {
-        mutableStateListOf<SportType2>()
-    }
-
-    LaunchedEffect(key1 = true) {
-        val db = FirebaseFirestore.getInstance()
-        val docRef = db.collection("typeCollection")
-        docRef.get().addOnSuccessListener {
-
-            val docList = it.documents
-            Log.e("docList",docList.toString())
+fun SportTypes(navController: NavController, viewModel: SportTypeViewModel = hiltViewModel()) {
 
-            for (document in docList){
-
-                val docMap = document.data!!
-
-                val image =docMap.get("image").toString()
-                val title = docMap.get("title").toString()
-
-                myList.add(SportType2(title,image))
-
-            }
-        }
-    }
+    when (val sportListResponse = viewModel.booksResponse) {
+        is Response.Failure -> "TODO()"
+        is Response.Loading -> "TODO()"
+        is Response.Success ->
 
-    Column(
-        modifier = Modifier
-            .fillMaxSize()
-            .padding(top = 40.dp),
-        horizontalAlignment = Alignment.CenterHorizontally,
-    ) {
-
-        // Text(text = "Select a sport type ", Modifier.fillMaxWidth(), fontSize = 24.sp, textAlign = TextAlign.Center)
-        LazyColumn() {
+            Column(
+                modifier = Modifier
+                    .fillMaxSize()
+                    .padding(top = 40.dp),
+                horizontalAlignment = Alignment.CenterHorizontally,
+            ) {
+                LazyColumn() {
+                    val a = sportListResponse.data
 
-            items(myList) {
+                    items(sportListResponse.data) {
 
-                ImageCard(painter = it.image, contentDescription = "", title = it.title)
-            }
-        }
+                        ImageCard(
+                            painter = it.image!!,
+                            contentDescription = "",
+                            title = it.title!!,
+                            navController = navController,
+                        )
+                    }
+                }
+            }
     }
 }
 
 @OptIn(ExperimentalGlideComposeApi::class)
 @Composable
 fun ImageCard(
-    painter: String, contentDescription: String, title: String, modifier: Modifier = Modifier
+    painter: String,
+    contentDescription: String,
+    title: String,
+    modifier: Modifier = Modifier,
+    navController: NavController
 ) {
     Card(
         modifier = modifier
             .fillMaxWidth()
             .padding(20.dp)
             .clickable {
-                Log.e("card", "click")
+                navController.navigate(SportTypeScreens.SportTypeSetting)
             },
         shape = RoundedCornerShape(24.dp),
-        elevation = CardDefaults.cardElevation(20.dp),
+        elevation = CardDefaults.cardElevation(10.dp),
 
         ) {
         Box(modifier = Modifier.height(200.dp)) {
@@ -104,7 +88,7 @@
                 model = painter,
                 contentDescription = contentDescription,
                 modifier = Modifier.fillMaxSize(),
-                contentScale = ContentScale.Crop
+                contentScale = ContentScale.Crop,
             )
 
             Box(
@@ -114,27 +98,24 @@
                         brush = Brush.verticalGradient(
                             colors = listOf(
                                 Color.Transparent,
-                                Color.Black
+                                Color.Black,
                             ),
                             // startY = 100f,
-                        )
-                    )
-            ) {
-
-            }
-
+                        ),
+                    ),
+            ) {}
             Box(
                 modifier = Modifier
                     .fillMaxSize()
                     .padding(12.dp),
-                contentAlignment = Alignment.BottomCenter
+                contentAlignment = Alignment.BottomCenter,
             ) {
                 Text(
                     title,
                     style = TextStyle(
                         color = Color.White,
                         fontSize = 16.sp,
-                        fontStyle = FontStyle.Italic
+                        fontStyle = FontStyle.Italic,
                     )
                 )
             }
Index: app/src/main/java/com/yeceylan/groupmaker/ui/splash/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yeceylan.groupmaker.ui.splash\r\n\r\n\r\nimport android.app.Activity\r\nimport android.content.Context\r\nimport androidx.compose.animation.core.Animatable\r\nimport androidx.compose.animation.core.tween\r\nimport androidx.compose.foundation.background\r\nimport androidx.compose.foundation.isSystemInDarkTheme\r\nimport androidx.compose.foundation.layout.Arrangement\r\nimport androidx.compose.foundation.layout.Column\r\nimport androidx.compose.foundation.layout.Spacer\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.height\r\nimport androidx.compose.foundation.layout.size\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.LaunchedEffect\r\nimport androidx.compose.runtime.getValue\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Alignment\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.draw.alpha\r\nimport androidx.compose.ui.graphics.Color\r\nimport androidx.compose.ui.platform.LocalContext\r\nimport androidx.compose.ui.text.font.FontWeight\r\nimport androidx.compose.ui.unit.dp\r\nimport androidx.compose.ui.unit.sp\r\nimport androidx.navigation.NavHostController\r\nimport com.airbnb.lottie.compose.LottieAnimation\r\nimport com.airbnb.lottie.compose.LottieCompositionSpec\r\nimport com.airbnb.lottie.compose.LottieConstants\r\nimport com.airbnb.lottie.compose.rememberLottieComposition\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.yeceylan.groupmaker.MainActivity\r\nimport com.yeceylan.groupmaker.R\r\nimport com.yeceylan.groupmaker.ui.bottombar.BottomBarScreen\r\nimport com.yeceylan.groupmaker.ui.splash.navigation.SplashScreens\r\nimport kotlinx.coroutines.delay\r\n\r\n\r\n@Composable\r\nfun SplashScreen(navController: NavHostController) {\r\n\r\n    val context = LocalContext.current\r\n\r\n    val alpha = remember {\r\n        Animatable(0f)\r\n    }\r\n    val auth = FirebaseAuth.getInstance()\r\n    FirebaseAuth.getInstance().signOut()\r\n    LaunchedEffect(key1 = true) {\r\n        alpha.animateTo(\r\n            1f,\r\n            animationSpec = tween(2500)\r\n        )\r\n        delay(3000)\r\n        navController.popBackStack()\r\n        navController.navigate(SplashScreens.OnboardingScreen)\r\n\r\n        if (auth != null) {\r\n            navController.navigate(BottomBarScreen.Home.route)\r\n        } else {\r\n            navController.popBackStack()\r\n            navController.navigate(SplashScreens.OnboardingScreen)\r\n        }\r\n\r\n    }\r\n\r\n    Column(\r\n        modifier = Modifier\r\n            .fillMaxSize()\r\n            .background(if (isSystemInDarkTheme()) Color.DarkGray else Color.White),\r\n        verticalArrangement = Arrangement.Center,\r\n        horizontalAlignment = Alignment.CenterHorizontally\r\n    ) {\r\n        LoaderAnimation(\r\n            modifier = Modifier.size(400.dp), anim = R.raw.splash_lottie\r\n        )\r\n        Spacer(modifier = Modifier.height(25.dp))\r\n        Text(\r\n            text = \"Let's Play\",\r\n            modifier = Modifier.alpha(alpha.value),\r\n            fontSize = 52.sp,\r\n            fontWeight = FontWeight.Light\r\n        )\r\n    }\r\n}\r\n\r\n@Composable\r\nfun LoaderAnimation(modifier: Modifier, anim: Int) {\r\n    val composition by rememberLottieComposition(LottieCompositionSpec.RawRes(anim))\r\n\r\n    LottieAnimation(\r\n        composition = composition, iterations = LottieConstants.IterateForever,\r\n        modifier = modifier\r\n    )\r\n}\r\n\r\n/*private fun onBoardingIsFinished(context: SplashActivity): Boolean {\r\n    val sharedPreferences = context.getSharedPreferences(\"onBoarding\", Context.MODE_PRIVATE)\r\n    return sharedPreferences.getBoolean(\"isFinished\", false)\r\n\r\n}\r\n\r\n */
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/ui/splash/SplashScreen.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/splash/SplashScreen.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/ui/splash/SplashScreen.kt	(revision ccad603bd1972110131c0470b7447397545e4c88)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/splash/SplashScreen.kt	(date 1722500976272)
@@ -59,12 +59,14 @@
         navController.navigate(SplashScreens.OnboardingScreen)
 
         if (auth != null) {
+           // auth.signOut()
             navController.navigate(BottomBarScreen.Home.route)
         } else {
             navController.popBackStack()
             navController.navigate(SplashScreens.OnboardingScreen)
         }
 
+
     }
 
     Column(
Index: app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeViewModel.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeViewModel.kt
new file mode 100644
--- /dev/null	(date 1722525043604)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeViewModel.kt	(date 1722525043604)
@@ -0,0 +1,32 @@
+package com.yeceylan.groupmaker.ui.sport_types
+
+import android.util.Log
+import androidx.compose.runtime.getValue
+import androidx.compose.runtime.mutableStateOf
+import androidx.compose.runtime.setValue
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.yeceylan.groupmaker.core.Response
+import com.yeceylan.groupmaker.domain.model.SportTypeData
+import com.yeceylan.groupmaker.domain.use_cases.sport_type.GetSportTypeUseCase
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.launch
+import javax.inject.Inject
+
+@HiltViewModel
+class SportTypeViewModel @Inject constructor(
+    private val sportTypeUseCase: GetSportTypeUseCase
+) : ViewModel() {
+    var booksResponse by mutableStateOf<Response<List<SportTypeData>>>(Response.Loading)
+
+    init {
+        getBooks()
+    }
+
+    private fun getBooks() = viewModelScope.launch {
+        sportTypeUseCase.invoke().collect { response ->
+            booksResponse = response
+            Log.e("response",booksResponse.toString())
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/domain/model/SportTypeData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/domain/model/SportTypeData.kt b/app/src/main/java/com/yeceylan/groupmaker/domain/model/SportTypeData.kt
new file mode 100644
--- /dev/null	(date 1722525254753)
+++ b/app/src/main/java/com/yeceylan/groupmaker/domain/model/SportTypeData.kt	(date 1722525254753)
@@ -0,0 +1,7 @@
+package com.yeceylan.groupmaker.domain.model
+
+data class SportTypeData(
+    val title: String? = null,
+    val image: String? = null,
+    val size: Int? = null,
+)
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/ui/bottombar/MainNavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yeceylan.groupmaker.ui.bottombar\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.MutableState\r\nimport androidx.navigation.NavHostController\r\nimport androidx.navigation.compose.NavHost\r\nimport androidx.navigation.compose.composable\r\nimport com.yeceylan.groupmaker.SportTypes\r\nimport com.yeceylan.groupmaker.ui.auth.login.LoginScreen\r\nimport com.yeceylan.groupmaker.ui.auth.navigation.AuthenticationScreens\r\nimport com.yeceylan.groupmaker.ui.auth.signup.SignUpScreen\r\nimport com.yeceylan.groupmaker.ui.bottombar.demoscreens.HistoryScreen\r\nimport com.yeceylan.groupmaker.ui.bottombar.demoscreens.HomeScreen\r\nimport com.yeceylan.groupmaker.ui.bottombar.demoscreens.ProfileScreen\r\nimport com.yeceylan.groupmaker.ui.onboarding.OnBoarding\r\nimport com.yeceylan.groupmaker.ui.splash.SplashScreen\r\nimport com.yeceylan.groupmaker.ui.splash.navigation.SplashScreens\r\n\r\n\r\n@Composable\r\nfun MainNavGraph(\r\n    navController: NavHostController,\r\n    isShowBottomBar: MutableState<Boolean>,\r\n) {\r\n    NavHost(\r\n        navController = navController,\r\n        startDestination = SplashScreens.SplashScreen,\r\n    ) {\r\n\r\n        composable<AuthenticationScreens.LoginScreen> {\r\n            isShowBottomBar.value = false\r\n            LoginScreen(navController = navController)\r\n        }\r\n        composable< AuthenticationScreens.SignUpScreen> {\r\n            isShowBottomBar.value = false\r\n            SignUpScreen(navController = navController)\r\n        }\r\n        composable<SplashScreens.SplashScreen> {\r\n            isShowBottomBar.value = false\r\n            SplashScreen(navController = navController)\r\n        }\r\n        composable<SplashScreens.OnboardingScreen> {\r\n            isShowBottomBar.value = false\r\n            OnBoarding(navController = navController)\r\n        }\r\n        composable(route = BottomBarScreen.Home.route) {\r\n            isShowBottomBar.value = true\r\n            SportTypes()\r\n        }\r\n        composable(route = BottomBarScreen.History.route) {\r\n            isShowBottomBar.value = true\r\n            HistoryScreen()\r\n        }\r\n        composable(route = BottomBarScreen.Profile.route) {\r\n            isShowBottomBar.value = true\r\n            ProfileScreen()\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/ui/bottombar/MainNavGraph.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/bottombar/MainNavGraph.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/ui/bottombar/MainNavGraph.kt	(revision ccad603bd1972110131c0470b7447397545e4c88)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/bottombar/MainNavGraph.kt	(date 1722505818209)
@@ -5,16 +5,17 @@
 import androidx.navigation.NavHostController
 import androidx.navigation.compose.NavHost
 import androidx.navigation.compose.composable
-import com.yeceylan.groupmaker.SportTypes
+import com.yeceylan.groupmaker.ui.sport_types.SportTypes
 import com.yeceylan.groupmaker.ui.auth.login.LoginScreen
 import com.yeceylan.groupmaker.ui.auth.navigation.AuthenticationScreens
 import com.yeceylan.groupmaker.ui.auth.signup.SignUpScreen
 import com.yeceylan.groupmaker.ui.bottombar.demoscreens.HistoryScreen
-import com.yeceylan.groupmaker.ui.bottombar.demoscreens.HomeScreen
 import com.yeceylan.groupmaker.ui.bottombar.demoscreens.ProfileScreen
 import com.yeceylan.groupmaker.ui.onboarding.OnBoarding
 import com.yeceylan.groupmaker.ui.splash.SplashScreen
 import com.yeceylan.groupmaker.ui.splash.navigation.SplashScreens
+import com.yeceylan.groupmaker.ui.sport_types.SportTypeSetting
+import com.yeceylan.groupmaker.ui.sport_types.navigation.SportTypeScreens
 
 
 @Composable
@@ -45,7 +46,7 @@
         }
         composable(route = BottomBarScreen.Home.route) {
             isShowBottomBar.value = true
-            SportTypes()
+            SportTypes(navController = navController)
         }
         composable(route = BottomBarScreen.History.route) {
             isShowBottomBar.value = true
@@ -55,5 +56,9 @@
             isShowBottomBar.value = true
             ProfileScreen()
         }
+        composable<SportTypeScreens.SportTypeSetting> {
+            isShowBottomBar.value = true
+            SportTypeSetting()
+        }
     }
 }
Index: app/src/main/java/com/yeceylan/groupmaker/data/di/SportTypeModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/data/di/SportTypeModule.kt b/app/src/main/java/com/yeceylan/groupmaker/data/di/SportTypeModule.kt
new file mode 100644
--- /dev/null	(date 1722512568158)
+++ b/app/src/main/java/com/yeceylan/groupmaker/data/di/SportTypeModule.kt	(date 1722512568158)
@@ -0,0 +1,27 @@
+package com.yeceylan.groupmaker.data.di
+
+import com.google.firebase.Firebase
+import com.google.firebase.firestore.CollectionReference
+import com.google.firebase.firestore.firestore
+import com.yeceylan.groupmaker.data.repository.SportTypeRepositoryImpl
+import com.yeceylan.groupmaker.domain.repository.SportTypeRepository
+import com.yeceylan.groupmaker.domain.use_cases.sport_type.GetSportTypeUseCase
+import dagger.Module
+import dagger.Provides
+import dagger.hilt.InstallIn
+import dagger.hilt.components.SingletonComponent
+
+@Module
+@InstallIn(SingletonComponent::class)
+object AppModule {
+    @Provides
+    fun provideSportTypeRef() = Firebase.firestore.collection("typeCollection")
+
+    @Provides
+    fun provideBooksRepository(
+        sportTypeRef: CollectionReference
+    ): SportTypeRepository = SportTypeRepositoryImpl(sportTypeRef)
+
+    @Provides
+    fun provideUseCases(repo: SportTypeRepository) = GetSportTypeUseCase(repo)
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/navigation/SportTypeScreens.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/navigation/SportTypeScreens.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/navigation/SportTypeScreens.kt
new file mode 100644
--- /dev/null	(date 1722505105082)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/navigation/SportTypeScreens.kt	(date 1722505105082)
@@ -0,0 +1,13 @@
+package com.yeceylan.groupmaker.ui.sport_types.navigation
+
+import kotlinx.serialization.Serializable
+
+@Serializable
+sealed class SportTypeScreens {
+
+    @Serializable
+    data object SportTypes : SportTypeScreens()
+
+    @Serializable
+    data object SportTypeSetting : SportTypeScreens()
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/domain/use_cases/sport_type/GetSportTypeUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/domain/use_cases/sport_type/GetSportTypeUseCase.kt b/app/src/main/java/com/yeceylan/groupmaker/domain/use_cases/sport_type/GetSportTypeUseCase.kt
new file mode 100644
--- /dev/null	(date 1722514595741)
+++ b/app/src/main/java/com/yeceylan/groupmaker/domain/use_cases/sport_type/GetSportTypeUseCase.kt	(date 1722514595741)
@@ -0,0 +1,9 @@
+package com.yeceylan.groupmaker.domain.use_cases.sport_type
+
+import com.yeceylan.groupmaker.domain.repository.SportTypeRepository
+
+class GetSportTypeUseCase(private val repo: SportTypeRepository) {
+
+    operator fun invoke() = repo.getSportTypeFromFirestore()
+
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/domain/repository/SportTypeRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/domain/repository/SportTypeRepository.kt b/app/src/main/java/com/yeceylan/groupmaker/domain/repository/SportTypeRepository.kt
new file mode 100644
--- /dev/null	(date 1722524801587)
+++ b/app/src/main/java/com/yeceylan/groupmaker/domain/repository/SportTypeRepository.kt	(date 1722524801587)
@@ -0,0 +1,11 @@
+package com.yeceylan.groupmaker.domain.repository
+
+import com.yeceylan.groupmaker.core.Response
+import com.yeceylan.groupmaker.domain.model.SportTypeData
+import kotlinx.coroutines.flow.Flow
+
+interface SportTypeRepository {
+
+    fun getSportTypeFromFirestore(): Flow<Response<List<SportTypeData>>>
+
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/data/repository/SportTypeRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/data/repository/SportTypeRepositoryImpl.kt b/app/src/main/java/com/yeceylan/groupmaker/data/repository/SportTypeRepositoryImpl.kt
new file mode 100644
--- /dev/null	(date 1722525224053)
+++ b/app/src/main/java/com/yeceylan/groupmaker/data/repository/SportTypeRepositoryImpl.kt	(date 1722525224053)
@@ -0,0 +1,37 @@
+package com.yeceylan.groupmaker.data.repository
+
+import com.google.firebase.firestore.CollectionReference
+import com.yeceylan.groupmaker.core.Response
+import com.yeceylan.groupmaker.domain.model.SportTypeData
+import com.yeceylan.groupmaker.domain.repository.SportTypeRepository
+import kotlinx.coroutines.channels.awaitClose
+import kotlinx.coroutines.flow.callbackFlow
+import javax.inject.Inject
+import javax.inject.Singleton
+
+@Singleton
+class SportTypeRepositoryImpl @Inject constructor(
+    private val sportTypeRef: CollectionReference
+) : SportTypeRepository {
+
+    override fun getSportTypeFromFirestore() = callbackFlow {
+
+        val snapshotListener = sportTypeRef.orderBy("title").addSnapshotListener { snapshot, e ->
+
+            val sportTypeResponse = if (snapshot != null) {
+
+                val sportTypes = snapshot.toObjects(SportTypeData::class.java)
+                Response.Success(sportTypes)
+
+            } else {
+                Response.Failure(e)
+            }
+            trySend(sportTypeResponse)
+        }
+        awaitClose {
+            snapshotListener.remove()
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/SportTypeSetting.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/SportTypeSetting.kt b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeSetting.kt
rename from app/src/main/java/com/yeceylan/groupmaker/SportTypeSetting.kt
rename to app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeSetting.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/SportTypeSetting.kt	(revision ccad603bd1972110131c0470b7447397545e4c88)
+++ b/app/src/main/java/com/yeceylan/groupmaker/ui/sport_types/SportTypeSetting.kt	(date 1722500806682)
@@ -1,4 +1,4 @@
-package com.yeceylan.groupmaker
+package com.yeceylan.groupmaker.ui.sport_types
 
 import android.util.Log
 import androidx.compose.foundation.Image
@@ -26,6 +26,7 @@
 import androidx.compose.ui.tooling.preview.Preview
 import androidx.compose.ui.unit.dp
 import androidx.compose.ui.unit.sp
+import com.yeceylan.groupmaker.R
 
 @Preview
 @Composable
Index: app/src/main/java/com/yeceylan/groupmaker/core/Response.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/core/Response.kt b/app/src/main/java/com/yeceylan/groupmaker/core/Response.kt
new file mode 100644
--- /dev/null	(date 1722524801592)
+++ b/app/src/main/java/com/yeceylan/groupmaker/core/Response.kt	(date 1722524801592)
@@ -0,0 +1,15 @@
+package com.yeceylan.groupmaker.core
+
+sealed class Response<out T> {
+
+    object Loading : Response<Nothing>()
+
+    data class Success<out T>(
+        val data: T
+    ) : Response<T>()
+
+    data class Failure(
+        val e: Exception?
+    ) : Response<Nothing>()
+
+}
\ No newline at end of file
Index: app/src/main/java/com/yeceylan/groupmaker/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yeceylan.groupmaker\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.activity.enableEdgeToEdge\r\nimport androidx.compose.foundation.layout.fillMaxSize\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.Scaffold\r\nimport androidx.compose.material3.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Modifier\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport androidx.navigation.compose.rememberNavController\r\nimport com.yeceylan.groupmaker.ui.bottombar.BottomBar\r\nimport com.yeceylan.groupmaker.ui.bottombar.MainNavGraph\r\nimport com.yeceylan.groupmaker.ui.theme.GroupMakerTheme\r\nimport dagger.hilt.android.AndroidEntryPoint\r\n\r\n@AndroidEntryPoint\r\nclass MainActivity : ComponentActivity() {\r\n    @SuppressLint(\"UnusedMaterial3ScaffoldPaddingParameter\")\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        enableEdgeToEdge()\r\n        setContent {\r\n            val navController = rememberNavController()\r\n            val isBottomBarShow = remember { mutableStateOf(true) }\r\n\r\n\r\n            GroupMakerTheme {\r\n                Scaffold(\r\n                    modifier = Modifier.fillMaxSize(),\r\n                    bottomBar = { if (isBottomBarShow.value) {\r\n                        BottomBar(navController = navController)\r\n                    } }\r\n                ) {\r\n                    MainNavGraph(navController = navController, isShowBottomBar =  isBottomBarShow)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Composable\r\nfun Greeting(name: String, modifier: Modifier = Modifier) {\r\n    Text(\r\n        text = \"Hello $name!\",\r\n        modifier = modifier\r\n    )\r\n}\r\n\r\n@Preview(showBackground = true)\r\n@Composable\r\nfun GreetingPreview() {\r\n    GroupMakerTheme {\r\n        Greeting(\"Android\")\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/yeceylan/groupmaker/MainActivity.kt b/app/src/main/java/com/yeceylan/groupmaker/MainActivity.kt
--- a/app/src/main/java/com/yeceylan/groupmaker/MainActivity.kt	(revision ccad603bd1972110131c0470b7447397545e4c88)
+++ b/app/src/main/java/com/yeceylan/groupmaker/MainActivity.kt	(date 1722439050010)
@@ -14,6 +14,7 @@
 import androidx.compose.runtime.remember
 import androidx.compose.ui.Modifier
 import androidx.compose.ui.tooling.preview.Preview
+import androidx.core.splashscreen.SplashScreen.Companion.installSplashScreen
 import androidx.navigation.compose.rememberNavController
 import com.yeceylan.groupmaker.ui.bottombar.BottomBar
 import com.yeceylan.groupmaker.ui.bottombar.MainNavGraph
@@ -25,6 +26,7 @@
     @SuppressLint("UnusedMaterial3ScaffoldPaddingParameter")
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
+        installSplashScreen()
         enableEdgeToEdge()
         setContent {
             val navController = rememberNavController()
